---
-   config:
    -   testset:    "osio planner-platform e2e testset"
    -   variable_binds: {
          'headername': 'Content-Type',
          'headervalue':  'application/json',
          'fixedspacename':  'space4test',
          'space_iteration':    'spaceiter4test',
          'space_iteration2':    'spaceiter4test2',
          'child_iteration':    'childiter4space',
          'child_area_name':    'childarea4test',
          'witypeexperience':   '26787039-b68f-4e28-8814-c2f93be1ef4e',
          'wititle1':   'WI_1_CREATED_VIA_API_TEST',
          'wititle2':   'WI_2_CREATED_VIA_API_TEST',
          'wititle3':   'WI_3_CREATED_VIA_API_TEST',
          'widesc1':    'WI DESCRIPTION',
          'widesc2':    'WI DESCRIPTION. Edited via APIs'
          }

-   test:
    -   name:   "Find a Space"
    -   url:    {'template':  "/api/search/spaces?q=$fixedspacename"}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   extract_binds:
        -   'spaceid': {'jsonpath_mini': 'data.0.id'}

-   test:
    -   name:   "Delete a Space" 
    -   url:    {'template':  "/api/spaces/$spaceid"}
    -   method: "DELETE"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200, 400]

-   test:
    -   name:   "Create a new Space"
    -   url:    "/api/spaces"
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template: '{"data":{"name":"$fixedspacename","path":"","attributes":{"name":"$fixedspacename"},"type":"spaces","privateSpace":false,"process":{"name":"Scenario Driven Planning","description":"An agile development methodology focused on real-world problems, or Scenarios, described in the language and from the viewpoint of the user. Scenarios deliver particular Value Propositions and are realized via Experiences."},"relationships":{"areas":{"links":{"related":""}},"iterations":{"links":{"related":""}},"owned-by":{"data":{"id":"29f698d6-5c65-4129-9e97-5286cdb18a1c","type":"identities"}}}}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data",   comparator: "type",   expected:   "dict"}
        -   compare:    {jsonpath_mini: "data.attributes.name", comparator: "eq",   expected:   {template: '$fixedspacename'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   "spaces"}
    -   extract_binds:
        -   'spaceid': {'jsonpath_mini': 'data.id'}
        -   'spacename': {'jsonpath_mini': 'data.attributes.name'}

-   test:
    -   name:   "Get space collaborators"
    -   url:    {'template':  "/api/spaces/$spaceid/collaborators"}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   extract_test:   {jsonpath_mini: "data.0",  test: "exists"}
    -   extract_binds:
        -   'userid': {'jsonpath_mini': 'data.0.attributes.identityID'}
        -   'username': {'jsonpath_mini': 'data.0.attributes.username'}
        -   'userfullname': {'jsonpath_mini': 'data.0.attributes.fullName'}
        -   'useremail': {'jsonpath_mini': 'data.0.attributes.email'}

-   test:
    -   name:   "Get Space Details"
    -   url:    {'template':  "/api/spaces/$spaceid"}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data.attributes.name", comparator: "eq",   expected:   {template: '$spacename'}}
        -   compare:    {jsonpath_mini: "data.relationships.owned-by.data.id",   comparator: "eq",   expected:   {template: '$userid'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   "spaces"}
    -   extract_binds:
        -   'spaceid': {'jsonpath_mini': 'data.id'}
        -   'spacename': {'jsonpath_mini': 'data.attributes.name'}

-   test:
    -   name:   "Query by Space - No Workitems"
    -   url:    {'template':  '/api/search?filter[expression]={"space":"$spaceid"}'}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "links.first", comparator: "contains",   expected:   {template: 'filter[expression]={"space":"$spaceid"}'}}
        -   compare:    {jsonpath_mini: "links.last", comparator: "contains",   expected:   {template: 'filter[expression]={"space":"$spaceid"}'}}
        -   compare:    {jsonpath_mini: "meta.totalCount",   comparator: "eq",   expected:   0}
        -   extract_test:   {jsonpath_mini: "data.0",  test: "not_exists"}

-   test:
    -   name:   "Get Areas under a Space - No child Space"
    -   url:    {'template':  "/api/spaces/$spaceid/areas"}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data.0.attributes.name", comparator: "eq",   expected:   {template: '$spacename'}}
        -   compare:    {jsonpath_mini: "data.0.attributes.parent_path_resolved", comparator: "eq",   expected:   '/'}
        -   compare:    {jsonpath_mini: "data.0.relationships.space.data.id",   comparator: "eq",   expected:   {template: '$spaceid'}}
        -   compare:    {jsonpath_mini: "data.0.type",   comparator: "eq",   expected:   "areas"}
        -   extract_test:   {jsonpath_mini: "data.1",  test: "not_exists"}
    -   extract_binds:
        -   'parent_area_id': {'jsonpath_mini': 'data.0.id'}
        -   'parent_area_name': {'jsonpath_mini': 'data.0.attributes.name'}

-   test:
    -   name:   "Create a new child Area"
    -   url:    {'template':  "/api/areas/$parent_area_id"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template: '{"data":{"attributes":{"name":"$child_area_name"},"type":"areas"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data",   comparator: "type",   expected:   "dict"}
        -   compare:    {jsonpath_mini: "data.attributes.name", comparator: "eq",   expected:   {template: '$child_area_name'}}
        -   compare:    {jsonpath_mini: "data.attributes.parent_path_resolved", comparator: "contains",   expected:   {template: '$spacename'}}
        -   compare:    {jsonpath_mini: "data.relationships.parent.data.id", comparator: "eq",   expected:   {template: '$parent_area_id'}}
        -   compare:    {jsonpath_mini: "data.relationships.space.data.id", comparator: "eq",   expected:   {template: '$spaceid'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   "areas"}
    -   extract_binds:
        -   'child_area_id': {'jsonpath_mini': 'data.id'}

-   test:
    -   name:   "Create a new Space-Iteration"
    -   url:    {'template':  "/api/spaces/$spaceid/iterations"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template: '{"data":{"attributes":{"name":"$space_iteration","description":"Space Iteration for test","state":"new","parent_path":"","resolved_parent_path":""},"relationships":{"parent":{"data":{"id":"","type":"iterations"},"links":{"self":""}},"space":{"data":{"id":"$spaceid","type":"space"},"links":{"self":""}}},"type":"iterations"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data",   comparator: "type",   expected:   "dict"}
        -   compare:    {jsonpath_mini: "data.attributes.name", comparator: "eq",   expected:   {template: '$space_iteration'}}
        -   compare:    {jsonpath_mini: "data.attributes.description", comparator: "eq",   expected:   "Space Iteration for test"}
        -   compare:    {jsonpath_mini: "data.attributes.resolved_parent_path", comparator: "contains",   expected:   {template: '$spacename'}}
        -   compare:    {jsonpath_mini: "data.relationships.space.data.id", comparator: "eq",   expected:   {template: '$spaceid'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   "iterations"}
    -   extract_binds:
        -   'space_iteration_id': {'jsonpath_mini': 'data.id'}
        -   'root_iteration_id': {'jsonpath_mini': 'data.relationships.parent.data.id'}

-   test:
    -   name:   "Create another new Space-Iteration"
    -   url:    {'template':  "/api/spaces/$spaceid/iterations"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template: '{"data":{"attributes":{"name":"$space_iteration2","description":"Space Iteration 2 for test","state":"new","parent_path":"","resolved_parent_path":""},"relationships":{"parent":{"data":{"id":"","type":"iterations"},"links":{"self":""}},"space":{"data":{"id":"$spaceid","type":"space"},"links":{"self":""}}},"type":"iterations"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
    -   extract_binds:
        -   'space_iteration2_id': {'jsonpath_mini': 'data.id'}

-   test:
    -   name:   "Create a new Workitem in Space-Iteration - No Assignee"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"attributes":{"system.state":"new","system.title":"$wititle2","system.description":"$widesc1"},"relationships":{"baseType":{"data":{"id":"$witypeexperience","type":"workitemtypes"}},"iteration":{"data":{"id":"$space_iteration_id","type":"iteration"}}},"type":"workitems"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle2'}}
        -   compare:    {jmespath: "data.attributes.\"system.state\"", comparator: "eq",   expected:   "new"}
        -   compare:    {jmespath: "data.attributes.\"system.description\"", comparator: "eq",   expected:   {template: '$widesc1'}}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   0}
        -   compare:    {jsonpath_mini: "data.relationships.baseType.data.id",   comparator: "eq",   expected:   {template: '$witypeexperience'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   'workitems'}
        -   compare:    {jsonpath_mini: "data.relationships.iteration.data.id",   comparator: "eq",   expected:   {template: '$space_iteration_id'}}
    -   extract_binds:
        -   'wiid_iter':    {jsonpath_mini: 'data.id'}
        -   'wiid_iter_area':   {jsonpath_mini: 'data.relationships.area.data.id'}

-   test:
    -   name:   "Create a new Workitem in Space-Iteration2 - No Assignee"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"attributes":{"system.state":"new","system.title":"$wititle3","system.description":"$widesc1"},"relationships":{"baseType":{"data":{"id":"$witypeexperience","type":"workitemtypes"}},"iteration":{"data":{"id":"$space_iteration2_id","type":"iteration"}}},"type":"workitems"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle3'}}
        -   compare:    {jsonpath_mini: "data.relationships.iteration.data.id",   comparator: "eq",   expected:   {template: '$space_iteration2_id'}}
    -   extract_binds:
        -   'wiid_iter2':    {jsonpath_mini: 'data.id'}
        -   'wiid_iter2_area':   {jsonpath_mini: 'data.relationships.area.data.id'}

-   test:
    -   name:   "Query by Area AND Iteration - Workitems not present"
    -   url:    {'template':  '/api/search?filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "links.first", comparator: "contains",   expected:   {template: 'filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}}
        -   compare:    {jsonpath_mini: "links.last", comparator: "contains",   expected:   {template: 'filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}}
        -   compare:    {jsonpath_mini: "meta.totalCount",   comparator: "eq",   expected:   0}

-   test:
    -   name:   "Update a Workitem in Space-Iteration - Change Area"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems/$wiid_iter"}
    -   method: "PATCH"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"id":"$wiid_iter","attributes":{"version":1},"links":{"self":"https://api.openshift.io/api/spaces/$spaceid/workitems/$wiid_iter"},"type":"workitems","relationships":{"area":{"data":{"id":"$child_area_id","type":"area"}}}}}'}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   2}
        -   compare:    {jsonpath_mini: "data.relationships.area.data.id'",   comparator: "eq",   expected:   {template: '$child_area_id'}}

-   test:
    -   name:   "Query by Area AND Iteration - Workitems present"
    -   url:    {'template':  '/api/search?filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jsonpath_mini: "data.0.id",   comparator: "eq",   expected:   {template:   '$wiid_iter2'}}
        -   compare:    {jsonpath_mini: "links.first", comparator: "contains",   expected:   {template: 'filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}}
        -   compare:    {jsonpath_mini: "links.last", comparator: "contains",   expected:   {template: 'filter[expression]={"$AND":[{"space":"$spaceid"},{"area":"$child_area_id"},{"iteration":"$space_iteration2_id"}]}'}}
        -   compare:    {jsonpath_mini: "meta.totalCount",   comparator: "eq",   expected:   1}

-   test:
    -   name:   "Create a new Workitem in Backlog - No Assignee"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems"}
    -   method: "POST"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"attributes":{"system.state":"new","system.title":"$wititle1","system.description":"$widesc1"},"relationships":{"baseType":{"data":{"id":"$witypeexperience","type":"workitemtypes"}}},"type":"workitems"}}'}
    -   expected_status:    [201]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle1'}}
        -   compare:    {jmespath: "data.attributes.\"system.state\"", comparator: "eq",   expected:   "new"}
        -   compare:    {jmespath: "data.attributes.\"system.description\"", comparator: "eq",   expected:   {template: '$widesc1'}}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   0}
        -   compare:    {jsonpath_mini: "data.relationships.baseType.data.id",   comparator: "eq",   expected:   {template: '$witypeexperience'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   'workitems'}
        -   extract_test:   {jsonpath_mini: "data.relationships.assignees.data",  test: "not_exists"}
    -   extract_binds:
        -   'wiid': {'jsonpath_mini': 'data.id'}

-   test:
    -   name:   "Update a Workitem in Backlog - Change Description"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems/$wiid"}
    -   method: "PATCH"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"id":"$wiid","attributes":{"version":0,"system.description":{"markup":"Markdown","content":"$widesc2"}},"links":{"self":"https://api.openshift.io/api/spaces/$spaceid/workitems/$wiid"},"type":"workitems"}}'}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle1'}}
        -   compare:    {jmespath: "data.attributes.\"system.state\"", comparator: "eq",   expected:   "new"}
        -   compare:    {jmespath: "data.attributes.\"system.description\"", comparator: "eq",   expected:   {template: '$widesc2'}}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   1}
        -   compare:    {jsonpath_mini: "data.relationships.baseType.data.id",   comparator: "eq",   expected:   {template: '$witypeexperience'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   'workitems'}
        -   extract_test:   {jsonpath_mini: "data.relationships.assignees.data",  test: "not_exists"}

-   test:
    -   name:   "Update a Workitem in Backlog - Change Assignee"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems/$wiid"}
    -   method: "PATCH"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"id":"$wiid","attributes":{"version":1},"links":{"self":"https://api.openshift.io/api/spaces/$spaceid/workitems/$wiid"},"type":"workitems","relationships":{"assignees":{"data":[{"id":"$userid","type":"identities"}]}}}}'}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle1'}}
        -   compare:    {jmespath: "data.attributes.\"system.state\"", comparator: "eq",   expected:   "new"}
        -   compare:    {jmespath: "data.attributes.\"system.description\"", comparator: "eq",   expected:   {template: '$widesc2'}}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   2}
        -   compare:    {jsonpath_mini: "data.relationships.assignees.data.0.id",   comparator: "eq",   expected:   {template: '$userid'}}
        -   compare:    {jsonpath_mini: "data.relationships.baseType.data.id",   comparator: "eq",   expected:   {template: '$witypeexperience'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   'workitems'}

-   test:
    -   name:   "Update a Workitem in Backlog - Change State"
    -   url:    {'template':  "/api/spaces/$spaceid/workitems/$wiid"}
    -   method: "PATCH"
    -   headers:  {template:  {'$headername': '$headervalue', 'Authorization':  'Bearer $token'}}
    -   body:   {template:  '{"data":{"id":"$wiid","attributes":{"version":2,"system.state":"resolved"},"links":{"self":"https://api.openshift.io/api/spaces/$spaceid/workitems/$wiid"},"type":"workitems"}}'}
    -   expected_status:    [200]
    -   validators:
        -   compare:    {header:    "content-type", comparator: contains,   expected:   'application/vnd.api+json'}
        -   json_schema:    {schema:    {file: 'jsonapi_schema.json'}}
        -   compare:    {jmespath: "data.attributes.\"system.title\"", comparator: "eq",   expected:   {template: '$wititle1'}}
        -   compare:    {jmespath: "data.attributes.\"system.state\"", comparator: "eq",   expected:   "resolved"}
        -   compare:    {jmespath: "data.attributes.\"system.description\"", comparator: "eq",   expected:   {template: '$widesc2'}}
        -   compare:    {jsonpath_mini: "data.attributes.version", comparator: "eq",   expected:   3}
        -   compare:    {jsonpath_mini: "data.relationships.assignees.data.0.id",   comparator: "eq",   expected:   {template: '$userid'}}
        -   compare:    {jsonpath_mini: "data.relationships.baseType.data.id",   comparator: "eq",   expected:   {template: '$witypeexperience'}}
        -   compare:    {jsonpath_mini: "data.type",   comparator: "eq",   expected:   'workitems'}